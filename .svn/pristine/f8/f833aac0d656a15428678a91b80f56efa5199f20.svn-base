package com.example.myimageapp;

import android.app.Activity;

import android.os.Bundle;
import android.util.Log;


import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.myimageapp.utils.DebugHelper;

import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;

public class MainActivity extends Activity implements MovieAdapter.OnItemClickListener {
    private RecyclerView rcvCatogory;
    private MovieAdapter mMovieAdapter;
    int currentPage = 0;
    String[] arrDataName = {
            "data1.json",
            "data2.json",
            "data3.json",
    };
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initView();
        new MyAsyntask(this, new LoadDataListener() {
            @Override
            public void onLoadDataFinished(ArrayList<MovieImageModel> arrayList) {
                initAdapter(arrayList);

            }
//            @Override
//            public void onLoadDataFinished(ArrayList<MovieImageModel> arrayList) {
//                runOnUiThread(new Runnable() {
//                    @Override
//                    public void run() {
//                        mMovieAdapter = new MovieAdapter(arrayList, MainActivity.this, MainActivity.this );
//                        rcvCatogory.setLayoutManager(new GridLayoutManager(MainActivity.this, 2));
//                        rcvCatogory.setAdapter(mMovieAdapter);
//                    }
//                });
//            }
        }).execute(arrDataName[currentPage]);
//        new AsyncTask<String, Void, ArrayList<MovieImageModel>>(){
//            @Override
//            protected ArrayList<MovieImageModel> doInBackground(String... strings) {
//                ArrayList<MovieImageModel> movieList = new ArrayList<>();
//                Gson gson = new Gson();
//                String imageList = MovieList.loadJsonFromAssets(MainActivity.this, strings[0]);
//                List<MovieImageModel> movieImageModels;
//                movieImageModels = gson.fromJson(imageList, new TypeToken<List<MovieImageModel>>(){}
//                        .getType());
//
//                if (movieImageModels != null && !movieImageModels.isEmpty()) {
//                    for (int i = 0; i < movieImageModels.size(); i++) {
//                        movieList.add(new MovieImageModel(movieImageModels.get(i).getId(), movieImageModels.get(i).getName(), movieImageModels.get(i).getUrl()));
//                        Log.d("getUrl", movieImageModels.get(i).getUrl());
//                    }
//                }
//
//                return movieList;
//            }
//
//            @Override
//            protected void onPostExecute(ArrayList<MovieImageModel> movieImageModels) {
//                super.onPostExecute(movieImageModels);
//
//            }
//        }.execute("data1.json", "data2.json", "data3.json");
        initAction();

    }

    private void initAdapter(ArrayList<MovieImageModel> arrayList) {
        mMovieAdapter = new MovieAdapter(arrayList, MainActivity.this, MainActivity.this);
        rcvCatogory.setLayoutManager(new GridLayoutManager(MainActivity.this, 2));
        rcvCatogory.setAdapter(mMovieAdapter);
    }

    private boolean isLoadingData;
    private void initView(){
        rcvCatogory = findViewById(R.id.rcvGrid);
        rcvCatogory.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(@NonNull @NotNull RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                Log.e("rcvCatogory.onScrollStateChanged", "newState:"+newState);
                if(!isLoadingData && newState == RecyclerView.SCROLL_STATE_IDLE
                        && currentPage < arrDataName.length - 1){
                    int lastPos = ((GridLayoutManager) recyclerView.getLayoutManager()).findLastVisibleItemPosition();
                    if(lastPos == mMovieAdapter.getItemCount() - 1){
                        isLoadingData = true;
                        loadMore();
                    }
                }
            }

            @Override
            public void onScrolled(@NonNull @NotNull RecyclerView recyclerView, int dx, int dy) {
                super.onScrolled(recyclerView, dx, dy);
//                DebugHelper.logDebug("rcvCatogory.onScrolled", "dx:"+dx +" - dy:"+dy);
            }
        });
    }
    private void loadMore() {
        currentPage++;
        new MyAsyntask(this, new LoadDataListener() {
            @Override
            public void onLoadDataFinished(ArrayList<MovieImageModel> arrayList) {
                mMovieAdapter.onUpdateData(arrayList);
                isLoadingData = false;
            }
        }).execute(arrDataName[currentPage]);
        DebugHelper.logDebug("currentPage", "currentPage" + currentPage );

    }


    private void initAction() {
    }

    @Override
    public void onClick(MovieImageModel model, int pos) {
//        Intent intent = new Intent(this, DetailActivity.class);
//        startActivity(intent);
    }
}
